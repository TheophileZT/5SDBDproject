name: docker-ci

on:
  push:
    branches:
      - FutureDataService
    paths:
      - 'Inference/**'
      - 'Frontend/**'
      - 'StationService/**'
      - 'EventImpactScoringSystem/**'
      - 'FetchFutureDataService/**'
      - 'docker-compose.yml'
  pull_request:
    branches:
      - FutureDataService

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      inference_changed: ${{ steps.filter.outputs.Inference }}
      frontend_changed: ${{ steps.filter.outputs.Frontend }}
      stationservice_changed: ${{ steps.filter.outputs.StationService }}
      eventimpactscoringsystem_changed: ${{ steps.filter.outputs.EventImpactScoringSystem }}
      fetchfuturedataservice_changed: ${{ steps.filter.outputs.FetchFutureDataService }}
      docker_compose_changed: ${{ steps.filter.outputs.DockerCompose }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Fetch the previous commit

      - name: Filter changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          base: 'FetchDataService~1'
          filters: |
            Inference:
              - 'Inference/**'
            Frontend:
              - 'Frontend/**'
            StationService:
              - 'StationService/**'
            EventImpactScoringSystem:
              - 'EventImpactScoringSystem/**'
            FetchFutureDataService:
              - 'FetchFutureDataService/**'
            DockerCompose:
              - 'docker-compose.yml'

  build-and-deploy-inference:
    needs: check-changes
    if: needs.check-changes.outputs.inference_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build and push Inference Docker image
        run: |
          echo "Building Inference..."
          # Add your build and push commands here

  build-and-deploy-frontend:
    needs: check-changes
    if: needs.check-changes.outputs.frontend_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build and push Frontend Docker image
        run: |
          echo "Building Frontend..."
          # Add your build and push commands here

  build-and-deploy-stationservice:
    needs: check-changes
    if: needs.check-changes.outputs.stationservice_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build and push StationService Docker image
        run: |
          echo "Building StationService..."
          # Add your build and push commands here

  build-and-deploy-eventimpactscoringsystem:
    needs: check-changes
    if: needs.check-changes.outputs.eventimpactscoringsystem_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build and push EventImpactScoringSystem Docker image
        run: |
          echo "Building EventImpactScoringSystem..."
          # Add your build and push commands here

  build-and-deploy-fetchfuturedataservice:
    needs: check-changes
    if: needs.check-changes.outputs.fetchfuturedataservice_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build and push FetchFutureDataService Docker image
        run: |
          echo "Building FetchFutureDataService..."
          # Add your build and push commands here

  build-and-deploy-dockercompose:
    needs: check-changes
    if: needs.check-changes.outputs.docker_compose_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy Docker Compose changes
        run: |
          echo "Deploying Docker Compose changes..."
          # Add your deployment commands here