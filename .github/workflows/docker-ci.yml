name: docker-ci

on:
  push:
    branches:
      - FutureDataService
    paths:
      - 'Inference/**'
      - 'Frontend/**'
      - 'StationService/**'
      - 'EventImpactScoringSystem/**'
      - 'FetchFutureDataService/**'
      - 'docker-compose.yml'
  pull_request:
    branches:
      - FutureDataService

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      inference_changed: ${{ steps.set-output.outputs.inference_changed }}
      frontend_changed: ${{ steps.set-output.outputs.frontend_changed }}
      stationservice_changed: ${{ steps.set-output.outputs.stationservice_changed }}
      eventimpactscoringsystem_changed: ${{ steps.set-output.outputs.eventimpactscoringsystem_changed }}
      fetchfuturedataservice_changed: ${{ steps.set-output.outputs.fetchfuturedataservice_changed }}
      docker_compose_changed: ${{ steps.set-output.outputs.docker_compose_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Fetch the previous commit

      - name: Determine changed directories
        id: determine-changes
        run: |
          changed_dirs=$(git diff --name-only HEAD~1 HEAD | xargs -I {} dirname {} | sort | uniq)
          echo "Changed directories: $changed_dirs"
          echo "inference_changed=false" >> $GITHUB_ENV
          echo "frontend_changed=false" >> $GITHUB_ENV
          echo "stationservice_changed=false" >> $GITHUB_ENV
          echo "eventimpactscoringsystem_changed=false" >> $GITHUB_ENV
          echo "fetchfuturedataservice_changed=false" >> $GITHUB_ENV
          echo "docker_compose_changed=false" >> $GITHUB_ENV
          for dir in $changed_dirs; do
            if [ "$dir" == "Inference" ]; then
              echo "inference_changed=true" >> $GITHUB_ENV
            elif [ "$dir" == "Frontend" ]; then
              echo "frontend_changed=true" >> $GITHUB_ENV
            elif [ "$dir" == "StationService" ]; then
              echo "stationservice_changed=true" >> $GITHUB_ENV
            elif [ "$dir" == "EventImpactScoringSystem" ]; then
              echo "eventimpactscoringsystem_changed=true" >> $GITHUB_ENV
            elif [ "$dir" == "FetchFutureDataService" ]; then
              echo "fetchfuturedataservice_changed=true" >> $GITHUB_ENV
            elif [ "$dir" == "docker-compose.yml" ]; then
              echo "docker_compose_changed=true" >> $GITHUB_ENV
            fi
          done

  build-and-deploy-inference:
    needs: check-changes
    if: env.inference_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build and push Inference Docker image
        run: |
          echo "Building Inference..."
          # Add your build and push commands here

  build-and-deploy-frontend:
    needs: check-changes
    if: env.frontend_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build and push Frontend Docker image
        run: |
          echo "Building Frontend..."
          # Add your build and push commands here

  build-and-deploy-stationservice:
    needs: check-changes
    if: env.stationservice_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build and push StationService Docker image
        run: |
          echo "Building StationService..."
          # Add your build and push commands here

  build-and-deploy-eventimpactscoringsystem:
    needs: check-changes
    if: env.eventimpactscoringsystem_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build and push EventImpactScoringSystem Docker image
        run: |
          echo "Building EventImpactScoringSystem..."
          # Add your build and push commands here

  build-and-deploy-fetchfuturedataservice:
    needs: check-changes
    if: env.fetchfuturedataservice_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build and push FetchFutureDataService Docker image
        run: |
          echo "Building FetchFutureDataService..."
          # Add your build and push commands here

  build-and-deploy-dockercompose:
    needs: check-changes
    if: env.docker_compose_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy Docker Compose changes
        run: |
          echo "Deploying Docker Compose changes..."
          # Add your deployment commands here