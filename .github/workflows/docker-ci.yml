name: Docker CI

on:
  push:
    branches:
      - FutureDataService
    paths:
      - 'Inference/**'
      - 'Frontend/**'
      - 'StationService/**'
      - 'EventImpactScoringSystem/**'
      - 'FetchFutureDataService/**'
      - 'docker-compose.yml'

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      inference_changed: ${{ steps.filter.outputs.Inference }}
      frontend_changed: ${{ steps.filter.outputs.Frontend }}
      stationservice_changed: ${{ steps.filter.outputs.StationService }}
      eventimpactscoringsystem_changed: ${{ steps.filter.outputs.EventImpactScoringSystem }}
      fetchfuturedataservice_changed: ${{ steps.filter.outputs.FetchFutureDataService }}
      docker_compose_changed: ${{ steps.filter.outputs.docker-compose.yml }}
    steps:
    - uses: actions/checkout@v2
    
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          Inference:
            - 'Inference/**'
          Frontend:
            - 'Frontend/**'
          StationService:
            - 'StationService/**'
          EventImpactScoringSystem:
            - 'EventImpactScoringSystem/**'
          FetchFutureDataService:
            - 'FetchFutureDataService/**'
          docker-compose: 'docker-compose.yml'

  build-and-deploy:
    needs: check-changes
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add VM to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts

    - name: Build and push modified services
      run: |
        if [[ "${{ needs.check-changes.outputs.inference_changed }}" == "true" ]]; then
          echo "Building Inference..."
          docker compose build inference
          docker compose push inference
        fi
        if [[ "${{ needs.check-changes.outputs.frontend_changed }}" == "true" ]]; then
          echo "Building Frontend..."
          docker compose build frontend
          docker compose push frontend
        fi
        if [[ "${{ needs.check-changes.outputs.stationservice_changed }}" == "true" ]]; then
          echo "Building StationService..."
          docker compose build stationservice
          docker compose push stationservice
        fi
        if [[ "${{ needs.check-changes.outputs.eventimpactscoringsystem_changed }}" == "true" ]]; then
          echo "Building EventImpactScoringSystem..."
          docker compose build eventimpactscoringsystem
          docker compose push eventimpactscoringsystem
        fi
        if [[ "${{ needs.check-changes.outputs.fetchfuturedataservice_changed }}" == "true" ]]; then
          echo "Building FetchFutureDataService..."
          docker compose build fetchfuturedataservice
          docker compose push fetchfuturedataservice
        fi
        if [[ "${{ needs.check-changes.outputs.docker-compose }}" == "true" ]]; then
          echo "Building all the services containers..."
          docker compose build
          docker compose push
        fi
    - name: Deploy modified services to VM
      run: |
        scp docker-compose.yml ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }}:~/5SDBDproject
        ssh ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }} '
          cd ~/5SDBDproject
          if [[ "${{ needs.check-changes.outputs.inference_changed }}" == "true" ]]; then
            echo "Updating Inference..."
            docker compose pull inference
            docker compose up -d --no-deps inference
          fi
          if [[ "${{ needs.check-changes.outputs.frontend_changed }}" == "true" ]]; then
            echo "Updating Frontend..."
            docker compose pull frontend
            docker compose up -d --no-deps frontend
          fi
          if [[ "${{ needs.check-changes.outputs.stationservice_changed }}" == "true" ]]; then
            echo "Updating StationService..."
            docker compose pull stationservice
            docker compose up -d --no-deps stationservice
          fi
          if [[ "${{ needs.check-changes.outputs.eventimpactscoringsystem_changed }}" == "true" ]]; then
            echo "Updating EventImpactScoringSystem..."
            docker compose pull eventimpactscoringsystem
            docker compose up -d --no-deps eventimpactscoringsystem
          fi
          if [[ "${{ needs.check-changes.outputs.fetchfuturedataservice_changed }}" == "true" ]]; then
            echo "Updating FetchFutureDataService..."
            docker compose pull fetchfuturedataservice
            docker compose up -d --no-deps fetchfuturedataservice
          fi
          if [[ "${{ needs.check-changes.outputs.docker-compsoe }}" == "true" ]]; then
            echo "Updating all the services..."
            docker compose pull
            docker compose up -d --no-deps
          fi
        '